version: '3.8'
services:
  app-backstore:
    container_name: medusa_app_backstore
    build:
      context: ./my-store
      dockerfile: ./Dockerfile
    restart: always
    ports:
      - 9000:9000
    depends_on:
      - db
    networks:
      - my-store-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000 || exit 1"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
  app-frontstore:
    container_name: medusa_app_frontstore
    build:
      context: ./my-store-storefront
      dockerfile: ./Dockerfile
    restart: always
    ports:
      - 8000:8000
    depends_on:
      - app-backstore
    networks:
      - my-store-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000 || exit 1"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
  db:
    hostname: db
    container_name: medusa_db
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: medusauser
      POSTGRES_PASSWORD: mystorepass
      POSTGRES_DB: medusadb
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data
      - ./postgresql/dump_store.sql:/tmp/dump_store.sql
      - ./postgresql/backup:/tmp/backup
    ports:
      - 5432:5432
    networks:
      - my-store-network
  nginx:
    image: nginx:stable-alpine
    container_name: app-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - my-store-network
  redis:
    container_name: app-redis
    image: redis:latest
    restart: always
    ports:
      - 6379:6379
    networks:
      - my-store-network
networks:
  my-store-network:
    driver: bridge